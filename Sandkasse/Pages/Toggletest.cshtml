@page "/toggletest"
@using SampleModel


<div style="margin-left: 200px, margin-top: 200px" class="flip-container" ontouchstart="this.classList.toggle('active');">
    <!-- -->
    <div class="flipper" onclick="@DivClicked">
        <div class="@UserInfo.FrontClass" >
        </div>
        <div class="@UserInfo.BackClass" >
        </div>
    </div>
</div>

<p>
    @* Note the old format for data binding, prefer new format (see below) *@
    Enter your name: <input type="text" bind="UserInfo.Name" /><br />

    @* Note the new format for data binding to numeric properties *@
    What is your age? <input type="number" bind="UserInfo.Age" /><br />

    @* Note how to pass a format for DateTime *@
    What is your birthday (culture-invariant default format)? <input type="text" bind="UserInfo.Birthday" /><br />
    What is your birthday (German date format)? <input type="text" bind="UserInfo.Birthday" format-value="dd.MM.yyyy" /><br />

    @* Data binding for checkboxes with boolean properties *@
    Are you an administrator? <input type="checkbox" bind="UserInfo.IsAdmin" /><br />

    @* Data binding for selects with enums *@
    <select id="select-box" bind="TypeOfEmployee">
        <option value=@EmployeeType.Employee>@EmployeeType.Employee.ToString()</option>
        <option value=@EmployeeType.Contractor>@EmployeeType.Contractor.ToString()</option>
        <option value=@EmployeeType.Intern>@EmployeeType.Intern.ToString()</option>
    </select>

    @*
        The following line would not work because decimal is not supported
        What is your salery? <input type="number" bind="Salary" /><br />
    *@
</p>

<h2>Hello, @UserInfo.Name!</h2>

<p>You are @UserInfo.Age years old. You are born on the @UserInfo.Birthday. You are @TypeOfEmployee.</p>

@if (UserInfo.IsAdmin)
{
    <p>You are an administrator!</p>
}

@functions {
    private enum EmployeeType { Employee, Contractor, Intern };
    private EmployeeType TypeOfEmployee { get; set; } = EmployeeType.Employee;
    private User UserInfo { get; set; } = new User();

    async void DivClicked()
    {
        //await Task.Delay(600);
        //UserInfo.Turned = !UserInfo.Turned;
    }

}